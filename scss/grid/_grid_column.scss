// .col-[breakpoint]-[col#]
//
// Provides column classes that are immediate children of rows.
// For each breakpoint defined, and for each column number, there
// is a corresponding class to indicate how many columns to span for each breakpoint
//
// See examples for class usage and also the convenient shortcut classes
//
// Markup:
//   <div class="container">
//       <div class="row" style="height:200px">
//          <article class="col-sm-12 col-md-12 col-lg-12 col-xl-12">First Example</article>
//          <article class="col-sm-xl-12">Shortcut to First Example</article>
//       </div>
//   </div>
//   <div class="container">
//       <div class="row" style="height:200px">
//          <article class="col-sm-12 col-md-4 col-lg-4 col-xl-4">Second Example</article>
//          <article class="col-sm-12 col-md-xl-4">Shortcut to Second Example</article>
//       </div>
//   </div>
//   <div class="container">
//       <div class="row" style="height:200px">
//          <article class="col-sm-12 col-md-12 col-lg-8 col-xl-8">Third Example</article>
//          <article class="col-sm-md-12 col-lg-xl-8">Shortcut to Third Example</article>
//       </div>
//   </div>
//   <div class="container">
//       <div class="row" style="height:200px">
//          <article class="col-sm-md-12 col-lg-xl-8">Fourth Example - 60/40 split</article>
//          <article class="col-sm-md-12 col-lg-xl-4">Shortcut to Fourth Example</article>
//       </div>
//   </div>
//
// Styleguide 2.4.0
@for $i from 1 through $grid-columns {
  @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-width: map-get($grid-breakpoints-max, 'sm')) {
    .col-sm-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-width: map-get($grid-breakpoints-max, 'md')) {
    .col-sm-md-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-width: map-get($grid-breakpoints-max, 'lg')) {
    .col-sm-lg-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'sm')) {
    .col-sm-xl-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
}
@for $i from 1 through $grid-columns {
  @media (min-width: map-get($grid-breakpoints, 'md')) and (max-width: map-get($grid-breakpoints-max, 'md')) {
    .col-md-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'md')) and (max-width: map-get($grid-breakpoints-max, 'lg')) {
    .col-md-lg-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'md')) {
    .col-md-xl-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
}
@for $i from 1 through $grid-columns {
  @media (min-width: map-get($grid-breakpoints, 'lg')) and (max-width: map-get($grid-breakpoints-max, 'lg')) {
    .col-lg-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
  @media (min-width: map-get($grid-breakpoints, 'lg')) {
    .col-lg-xl-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
}
@for $i from 1 through $grid-columns {
  @media (min-width: map-get($grid-breakpoints, 'xl')) {
    .col-xl-#{$i} {
      max-width: ($base-col-percent * $i);
      @if $i == $grid-columns {
        flex: 1 0 auto;
      }@else {
        flex: 0 0 auto;
      }
      @supports (display: grid) {
        grid-column-start: span #{$i};
      }
    }
  }
}

[class*='col-'] {
  width: 100%;
}

@supports (display: grid) {
  [class*='col-'] {
    flex-basis: initial;
    max-width: initial;
  }
}

//IE flex fix
.ie-flex-100-percent-sm {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-width: map-get($grid-breakpoints-max, 'sm')) {
      flex: 1 0 100% !important;
    }
  }
}
