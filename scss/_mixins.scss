// @mixin block-margin-bottom
//
// For most purposes, margins should be retrieved from $spacers (using map-get) in _breakpoints.scss
// However, @mixin block-margin-bottom is a convenience mix-in to add to parent element styles for block components that
// require a unified margin bottom,
//
// Styleguide 7.3.0

@mixin block-margin-bottom {
  margin-bottom: map-get($spacers, 'sm');

  @media screen and (min-width: map-get($grid-breakpoints, 'md')){
    margin-bottom: map-get($spacers, 'md');
  }
}

// this needs to be documented if added
// @mixin block-internal-spacing
//
// this mixin controls the internal spacing of items in a block

@mixin block-internal-spacing {
  margin-bottom: map-get($spacers, 'sm');

  @media screen and (min-width: map-get($grid-breakpoints, 'md')){
    margin-bottom: map-get($spacers, 'sm');
  }

  &:last-child {
    margin-bottom: 0;
  }
}

// @mixin link-color-active-hover
//
// Mixin to add hover and active styles to text color
// 
// - Params:
//   - `$color-prop`: Color to lighten (defaults to $ui-primary-font-color)
//
// Styleguide 9.1.0

@mixin link-color-active-hover($color-prop:$ui-primary-font-color) {
  transition: color 0.3s ease;
  &:active, &:hover{
    color: lighten($color-prop, 40%);
  }
}

// @mixin svg-color-active-hover
//
// Mixin to add hover and active styles to svg fill
//
// - Params:
//  - `$color-prop`: Color to lighten (defaults to $ui-primary-font-color)
//
// Styleguide 9.1.0

@mixin svg-color-active-hover($color-prop:$ui-primary-font-color) {
  transition: fill 0.3s ease;
  &:active svg, &:hover svg{
    fill: lighten($color-prop, 20%);
  }
}

// @mixin container-vertial-spacing
// 
// Mixin to add vertical spaing to the elements in a container block
//
@mixin container-vertical-spacing {
  > * {
    margin-bottom: map-get($spacers, 'lg');
  }

  @media screen and (min-width: map-get($grid-breakpoints, 'md')) {
    > * {
      margin-bottom: map-get($spacers, 'md');
    }
  }
}

// @mixin container-hr-separator
//
// Mixin to add style to the HR element used as separator
//
hr {
  background-color: $border-rule-color; // $ui-light-gray;
  border: 0;
  height: 1px;
  margin-top: 0;
}